main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6balt[,V1],0), pos=c(1,1,3,1))
#axis(2, ylim=c(3800,4800), col="black", line=5.7)
## Add labels to the second set of points
text(plot5[,year], plot5[,V3], labels=round(plot5[,V3],1), pos=c(3,1,3,3))
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Total Vehicle Emissions, in Thousands of Pounds", "Average Vehicle Emissions per Observation, in Pounds"),
col=c("red","blue"),
lty=1,
lwd=2)
## Set up the first plot, Total Emissions ~ Year
par(mar=c(5, 8, 4, 4) + 0.1)
plot(V1 ~ year,
data=plot6balt,
xlab="Year",
ylab="",
type="b",
col="red",
lwd=2,
pch=19,
axes=F,
ylim=c(60,380),
main="Total Vehicle Emissions by Year, Baltimore vs. Los Angeles"
)
## Label the Baltimore y-axis and points
mtext(2,text="Baltimore Vehicle Emissions in Tons", line=2.2)
text(plot6balt[,year], plot6balt[,V1], labels=round(plot6balt[,V1],0), pos=c(3,1,3,1))
axis(2, ylim=c(60,380),col="black",lwd=2)
## Add a completely new plot ontop of the old one for Los Angeles
par(new=T)
plot(V1 ~ year,
data=plot6la,
xlab="",
ylab="",
type="b",
col="blue",
lwd=2,
pch=19,
axes=F,
ylim=c(3800,4800),
main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6balt[,V1],0), pos=c(1,1,3,1))
axis(2, ylim=c(3800,4800), col="black", line=5.7)
## Add labels to the second set of points
text(plot5[,year], plot5[,V3], labels=round(plot5[,V3],1), pos=c(3,1,3,3))
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Total Vehicle Emissions, in Thousands of Pounds", "Average Vehicle Emissions per Observation, in Pounds"),
col=c("red","blue"),
lty=1,
lwd=2)
## Set up the first plot, Total Emissions ~ Year
par(mar=c(5, 8, 4, 4) + 0.1)
plot(V1 ~ year,
data=plot6balt,
xlab="Year",
ylab="",
type="b",
col="red",
lwd=2,
pch=19,
axes=F,
ylim=c(60,380),
main="Total Vehicle Emissions by Year, Baltimore vs. Los Angeles"
)
## Label the Baltimore y-axis and points
mtext(2,text="Baltimore Vehicle Emissions in Tons", line=2.2)
text(plot6balt[,year], plot6balt[,V1], labels=round(plot6balt[,V1],0), pos=c(3,1,3,1))
axis(2, ylim=c(60,380),col="black",lwd=2)
## Add a completely new plot ontop of the old one for Los Angeles
par(new=T)
plot(V1 ~ year,
data=plot6la,
xlab="",
ylab="",
type="b",
col="blue",
lwd=2,
pch=19,
axes=F,
ylim=c(3800,4800),
main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6balt[,V1],0), pos=c(1,1,3,1))
axis(2, ylim=c(3800,4800), col="black", line=3.7)
## Add labels to the second set of points
text(plot5[,year], plot5[,V3], labels=round(plot5[,V3],1), pos=c(3,1,3,3))
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Total Vehicle Emissions, in Thousands of Pounds", "Average Vehicle Emissions per Observation, in Pounds"),
col=c("red","blue"),
lty=1,
lwd=2)
plot6la
plot6balt
## Set up the first plot, Total Emissions ~ Year
par(mar=c(5, 8, 4, 4) + 0.1)
plot(V1 ~ year,
data=plot6balt,
xlab="Year",
ylab="",
type="b",
col="red",
lwd=2,
pch=19,
axes=F,
ylim=c(60,380),
main="Total Vehicle Emissions by Year, Baltimore vs. Los Angeles"
)
## Label the Baltimore y-axis and points
mtext(2,text="Baltimore Vehicle Emissions in Tons", line=2.2)
text(plot6balt[,year], plot6balt[,V1], labels=round(plot6balt[,V1],0), pos=c(3,1,3,1))
axis(2, ylim=c(60,380),col="black",lwd=2)
## Add a completely new plot ontop of the old one for Los Angeles
par(new=T)
plot(V1 ~ year,
data=plot6la,
xlab="",
ylab="",
type="b",
col="blue",
lwd=2,
pch=19,
axes=F,
ylim=c(3800,4800),
main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6la[,V1],0), pos=c(1,1,3,1))
axis(2, ylim=c(3800,4800), col="black", line=3.7)
## Add labels to the second set of points
text(plot5[,year], plot5[,V3], labels=round(plot5[,V3],1), pos=c(3,1,3,3))
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Total Vehicle Emissions, in Thousands of Pounds", "Average Vehicle Emissions per Observation, in Pounds"),
col=c("red","blue"),
lty=1,
lwd=2)
plot8la
plot6la
## Set up the first plot, Total Emissions ~ Year
par(mar=c(5, 8, 4, 4) + 0.1)
plot(V1 ~ year,
data=plot6balt,
xlab="Year",
ylab="",
type="b",
col="red",
lwd=2,
pch=19,
axes=F,
ylim=c(60,380),
main="Total Vehicle Emissions by Year, Baltimore vs. Los Angeles"
)
## Label the Baltimore y-axis and points
mtext(2,text="Baltimore Vehicle Emissions in Tons", line=2.2)
text(plot6balt[,year], plot6balt[,V1], labels=round(plot6balt[,V1],0), pos=c(3,1,3,1))
axis(2, ylim=c(60,380),col="black",lwd=2)
## Add a completely new plot ontop of the old one for Los Angeles
par(new=T)
plot(V1 ~ year,
data=plot6la,
xlab="",
ylab="",
type="b",
col="blue",
lwd=2,
pch=19,
axes=F,
ylim=c(3800,4800),
main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6la[,V1],0), pos=c(1,1,3,1))
axis(2, ylim=c(3800,4800), col="black", line=3.7)
## Add labels to the second set of points
text(plot5[,year], plot5[,V3], labels=round(plot5[,V3],1), pos=c(3,1,3,3))
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Baltimore Vehicle Emissions in Tons", "Los Angeles Vehicle Emissions in Tons"),
col=c("red","blue"),
lty=1,
lwd=2)
rm(baltvehicle)
rm(lavehicle)
rm(plot5)
rm(plot6balt)
rm(plot6la)
rm(vehicleSCC)
rm(yearcount)
## Load ggplot2 and data.table
library(ggplot2)
library(data.table)
## Subset for vehicle emissions and baltimore
## These were found visually by looking at grep("Vehicle|vehicle",names(table(SCC$EI.Sector)), value=TRUE)
## Find the SCC codes which refer to vehicle emissions, and make a character vector since they are characters in NEI
vehicleSCC <- as.character(SCC[grep("Vehicle", SCC$EI.Sector),]$SCC)
## Subset NEI according to the SCC values for vehicle emissions combustion and for Baltimore
baltvehicle <- NEI[NEI$SCC %in% vehicleSCC & NEI$fips=="24510",]
baltvehicle <- data.table(baltvehicle)
## Repeat the previous step but for Los Angeles
lavehicle <- NEI[NEI$SCC %in% vehicleSCC & NEI$fips=="06037",]
lavehicle <- data.table(lavehicle)
## Sum Emissions by year
plot6balt <- baltvehicle[,sum(Emissions), by=year]
plot6la <- lavehicle[,sum(Emissions), by=year]
### --------------------------------------------------------------------------###
### Now we make the SIXTH plot and save it
### --------------------------------------------------------------------------###
png("/Users/Mario/Desktop/ExploratoryDataAssignment2/plot6.png", width=600, height=600)
## Set up the first plot, Total Emissions ~ Year
par(mar=c(5, 8, 4, 4) + 0.1)
plot(V1 ~ year,
data=plot6balt,
xlab="Year",
ylab="",
type="b",
col="red",
lwd=2,
pch=19,
axes=F,
ylim=c(60,380),
main="Total Vehicle Emissions by Year, Baltimore vs. Los Angeles"
)
## Label the Baltimore y-axis and points
mtext(2,text="Baltimore Vehicle Emissions in Tons", line=2.2)
text(plot6balt[,year], plot6balt[,V1], labels=round(plot6balt[,V1],0), pos=c(3,1,3,1))
axis(2, ylim=c(60,380),col="black",lwd=2)
## Add a completely new plot ontop of the old one for Los Angeles
par(new=T)
plot(V1 ~ year,
data=plot6la,
xlab="",
ylab="",
type="b",
col="blue",
lwd=2,
pch=19,
axes=F,
ylim=c(3800,4800),
main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6la[,V1],0), pos=c(1,1,3,1))
axis(2, ylim=c(3800,4800), col="black", line=3.7)
## Add labels to the second set of points
text(plot5[,year], plot5[,V3], labels=round(plot5[,V3],1), pos=c(3,1,3,3))
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Baltimore Vehicle Emissions in Tons", "Los Angeles Vehicle Emissions in Tons"),
col=c("red","blue"),
lty=1,
lwd=2)
dev.off()
png("/Users/Mario/Desktop/ExploratoryDataAssignment2/plot6.png", width=600, height=600)
## Set up the first plot, Total Emissions ~ Year
par(mar=c(5, 8, 4, 4) + 0.1)
plot(V1 ~ year,
data=plot6balt,
xlab="Year",
ylab="",
type="b",
col="red",
lwd=2,
pch=19,
axes=F,
ylim=c(60,380),
main="Total Vehicle Emissions by Year, Baltimore vs. Los Angeles"
)
## Label the Baltimore y-axis and points
mtext(2,text="Baltimore Vehicle Emissions in Tons", line=2.2)
text(plot6balt[,year], plot6balt[,V1], labels=round(plot6balt[,V1],0), pos=c(3,1,3,1))
axis(2, ylim=c(60,380),col="black",lwd=2)
## Add a completely new plot ontop of the old one for Los Angeles
par(new=T)
plot(V1 ~ year,
data=plot6la,
xlab="",
ylab="",
type="b",
col="blue",
lwd=2,
pch=19,
axes=F,
ylim=c(3800,4800),
main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6la[,V1],0), pos=c(1,1,3,1))
axis(2, ylim=c(3800,4800), col="black", line=3.7)
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Baltimore Vehicle Emissions in Tons", "Los Angeles Vehicle Emissions in Tons"),
col=c("red","blue"),
lty=1,
lwd=2)
dev.off()
?plot
png("/Users/Mario/Desktop/ExploratoryDataAssignment2/plot6.png", width=600, height=600)
## Set up the first plot, Total Emissions ~ Year
par(mar=c(5, 8, 4, 4) + 0.1)
plot(V1 ~ year,
data=plot6balt,
xlab="Year",
ylab="",
type="b",
col="red",
lwd=2,
pch=19,
axes=F,
ylim=c(60,380),
main="Total Vehicle Emissions by Year, Baltimore vs. Los Angeles"
)
## Label the Baltimore y-axis and points
mtext(2,text="Baltimore Vehicle Emissions in Tons", line=2.2)
text(plot6balt[,year], plot6balt[,V1], labels=round(plot6balt[,V1],0), pos=c(3,1,3,1))
axis(2, ylim=c(60,380),col="black",lwd=2)
## Add a completely new plot ontop of the old one for Los Angeles
par(new=T)
plot(V1 ~ year,
data=plot6la,
xlab="",
ylab="",
type="b",
col="blue",
lwd=2,
pch=19,
axes=F,
ylim=c(3800,4800),
main=""
)
## Label the Los Angeles y-axis and points
mtext(2,text="Los Angeles Vehicle Emissions in Tons", line=5.7)
text(plot6la[,year], plot6la[,V1], labels=round(plot6la[,V1],0), pos=c(1,1,3,1))
axis(2, ylim=c(3800,4800), col="black", line=3.7)
## Label the x axis
axis(side=1, at=c(1999,2002,2005,2008))
## Add a legend to the top right
legend("topright",
legend=c("Baltimore Vehicle Emissions in Tons", "Los Angeles Vehicle Emissions in Tons"),
col=c("red","blue"),
lty=1,
lwd=2)
dev.off()
library(caret)
## set seed
set.seed(1234)
## Read in the pre-cleaned data
## Data was cleaned by MLcourseProjectCleaning.R
load("traincleaned.Rda")
load("testcleaned.Rda")
setwd("~/Coursera/JHUMachineLearning")
setwd("~Coursera/JHUMachineLearning")
setwd("/Users/Mario/Desktop/Coursera/JHUMachineLearning")
load("traincleaned.Rda")
load("testcleaned.Rda")
inTrain <- createDataPartition(train$classe, p=.75, list=FALSE)
training <- train[inTrain,]
crossval <- train[-inTrain,]
## Remove the original training dataframe so we do not get confused later
rm(train)
modelRF <- train(classe ~ . , data=training[1:200,], method="rf", prox=TRUE)
warnings()
modelRF <- train(classe~., data=training[1:200,], method="rf", prox=TRUE)
modelTrees <- train(class~., data=training, method="rpart")
modelTrees <- train(classe~., data=training, method="rpart")
library(rpart)
modelTrees <- train(classe~., data=training[1:300,], method="rpart")
modelTrees <- train(classe~., data=training[1:500,], method="rpart")
modelTrees <- train(classe~., data=training[,], method="rpart")
modelTrees <- train(classe~., data=, method="rpart")
working <- training[1:200,]
modelTrees <- train(classe~., data=working, method="rpart")
working
head(working)
load("traincleaned.Rda")
head(train)
head(training)
head(crossval)
table(crossval$classe)
table(train$classe)
modelTrees <- train(classe~., data=working, method="rpart")
table(sapply(train, is.na))
modelTrees <- train(classe~., data=working, method="rpart")
modelTrees <- train(classe~., data=working, method="rpart")
modelTrees <- train(classe~., data=working, method="rpart")
modelTrees <- train(classe~., data=working, method="rpart")
modelTrees <- train(classe~., data=working, method="rpart")
str(working)
modelTrees <- train(classe~roll_forearm, data=working, method="rpart")
modelTrees <- train(classe~., data=working, method="rf")
modelBoosting <- train(classe~., method="gbm", data=working, verbose=FALSE)
warnings()
modelBoosting <- train(classe~., method="gbm", data=working)
?train
warnings()
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
names(segmentationOriginal)
str(segmentationOriginal)
train(Class~., data=segmentationOriginal, method="rpart")
train(classe~., data=working, method="rpart")
?colnames
rownames(working)
rownames(working) <- 1:200
rownames(working)
train(classe~., data=working, method="rpart")
sapply(working,is.na)
sum(sapply(working,is.na))
sum(sapply(training,is.na))
sum(sapply(train,is.na))
sum(training>-1000 | training<12000)
sum(training[,2:53]>-1000 | training[,2:53]<12000)
sum(training[,1:52]>-1000 | training[,1:52]<12000)
14718*52
NA>5
"">5
str(training)
tree <- train(training[,52]~training[,1:51],data=training[,1:52],method="rpart")
tree <- train(magnet_forearm_z~.,data=training[,1:52],method="rpart")
tree <- train(magnet_forearm_z~.,data=working[,1:52],method="rpart")
tree <- train(classe~.,data=working[,1:52],method="rpart")
tree <- train(classe~.,data=working[,1:53],method="rpart")
working$classe
tree <- train(classe~.,data=training[,1:53],method="rpart")
modelTree <- train(classe~., data=training, method="rpart")
print(modelTree$finalModel)
summary(modelTree)
rm(train)
rm(working)
rm(tree)
rm(inTrain)
modelRF <- train(classe~., data=training, method="rf", prox=TRUE)
?train
modelRF <- train(x=training[,1:52], y=training$classe, data=training, method="rf", prox=TRUE)
?train
modelRF <- train(x=training[,1:52], y=training$classe, data=training, method="rf", prox=TRUE, trees=3)
modelRF <- train(x=training[,1:52], y=training$classe, data=training, method="rf", prox=TRUE, mtry=4, ntree=5_)
modelRF <- train(x=training[,1:52], y=training$classe, data=training, method="rf", prox=TRUE, mtry=4, ntree=5)
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", prox=TRUE, mtry=4, ntree=5)
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", ntree=5)
summary(RF)
summary(modelRF)
modelRF
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", ntree=11)
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", ntree=3)
modelRF
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", ntree=7)
modelRF
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", ntree=7, hello="hello")
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf")
rm(modelTree)
rm(modelRF)
rm(segmentationOriginal)
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf")
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", ntree=11)
modelRF <- train(x=training[,-53], y=training$classe, data=training, method="rf", preProcess="pca")
modelLDA <- train(x=training[,-53], y=training$classe, data=training, method="lda")
modelLDA
library(rpart)
modelTree <- train(classe~., data=training, method="rpart")
library(rpart)
modelTree <- train(x=training[,-53], y=training$classe, data=training, method="rpart")
predict(modelLDA, crossval)
predict(modelLDA, crossval[,-53])
sum(predict(modelLDA, crossval[,-53]) == crossval$classe)
3456/4904
modelTree <- train(x=training[,-53], y=training$classe, data=training, method="rpart")
warnings()
modelTree <- train(x=training[,-53], y=training$classe, method="rpart")
sum(predict(modelTree, crossval[,-53]) == crossval$classe)/4904
modelLDA <- train(x=training[,-53], y=training$classe, method="lda")
sum(predict(modelLDA, crossval[,-53]) == crossval$classe)/4904
modelBagEarth <- train(x=training[,-53], y=training$classe, method="bagEarth")
modelTreeBag <- train(x=training[,-53], y=training$classe, method="treebag")
modelNB <- train(x=training[,-53], y=training$classe, method="nb")
warnings()
library(klaR)
modelNB <- train(x=training[,-53], y=training$classe, method="nb")
modelRF <- train(x=training[,-53], y=training$classe, method="rf")
seq(1,52,2)
modelRF <- train(x=training[,seq(1,52,2)], y=training$classe, method="rf")
modelRF <- train(x=training[,seq(1,52,5)], y=training$classe, method="rf")
modelRF <- train(x=training[,seq(1,52,10)], y=training$classe, method="rf")
